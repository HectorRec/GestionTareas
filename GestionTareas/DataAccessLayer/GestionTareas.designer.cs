#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionTareas.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestiónTareas")]
	public partial class GestionTareasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAutenticacion(Autenticacion instance);
    partial void UpdateAutenticacion(Autenticacion instance);
    partial void DeleteAutenticacion(Autenticacion instance);
    partial void InsertListas(Listas instance);
    partial void UpdateListas(Listas instance);
    partial void DeleteListas(Listas instance);
    partial void InsertReconocimiento(Reconocimiento instance);
    partial void UpdateReconocimiento(Reconocimiento instance);
    partial void DeleteReconocimiento(Reconocimiento instance);
    partial void InsertRecordatorio(Recordatorio instance);
    partial void UpdateRecordatorio(Recordatorio instance);
    partial void DeleteRecordatorio(Recordatorio instance);
    partial void InsertTareas(Tareas instance);
    partial void UpdateTareas(Tareas instance);
    partial void DeleteTareas(Tareas instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertCalendario(Calendario instance);
    partial void UpdateCalendario(Calendario instance);
    partial void DeleteCalendario(Calendario instance);
        #endregion

        public GestionTareasDataContext() :
  base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GestiónTareasConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public GestionTareasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GestionTareasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GestionTareasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GestionTareasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autenticacion> Autenticacion
		{
			get
			{
				return this.GetTable<Autenticacion>();
			}
		}
		
		public System.Data.Linq.Table<Listas> Listas
		{
			get
			{
				return this.GetTable<Listas>();
			}
		}
		
		public System.Data.Linq.Table<Reconocimiento> Reconocimiento
		{
			get
			{
				return this.GetTable<Reconocimiento>();
			}
		}
		
		public System.Data.Linq.Table<Recordatorio> Recordatorio
		{
			get
			{
				return this.GetTable<Recordatorio>();
			}
		}
		
		public System.Data.Linq.Table<Tareas> Tareas
		{
			get
			{
				return this.GetTable<Tareas>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Calendario> Calendario
		{
			get
			{
				return this.GetTable<Calendario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autenticacion")]
	public partial class Autenticacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_sesion;
		
		private int _ID_usuario;
		
		private string _Token_sesion;
		
		private System.DateTime _Fecha_expiracion;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_sesionChanging(int value);
    partial void OnID_sesionChanged();
    partial void OnID_usuarioChanging(int value);
    partial void OnID_usuarioChanged();
    partial void OnToken_sesionChanging(string value);
    partial void OnToken_sesionChanged();
    partial void OnFecha_expiracionChanging(System.DateTime value);
    partial void OnFecha_expiracionChanged();
    #endregion
		
		public Autenticacion()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_sesion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_sesion
		{
			get
			{
				return this._ID_sesion;
			}
			set
			{
				if ((this._ID_sesion != value))
				{
					this.OnID_sesionChanging(value);
					this.SendPropertyChanging();
					this._ID_sesion = value;
					this.SendPropertyChanged("ID_sesion");
					this.OnID_sesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_usuario", DbType="Int NOT NULL")]
		public int ID_usuario
		{
			get
			{
				return this._ID_usuario;
			}
			set
			{
				if ((this._ID_usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_usuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_usuario = value;
					this.SendPropertyChanged("ID_usuario");
					this.OnID_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token_sesion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Token_sesion
		{
			get
			{
				return this._Token_sesion;
			}
			set
			{
				if ((this._Token_sesion != value))
				{
					this.OnToken_sesionChanging(value);
					this.SendPropertyChanging();
					this._Token_sesion = value;
					this.SendPropertyChanged("Token_sesion");
					this.OnToken_sesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_expiracion", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_expiracion
		{
			get
			{
				return this._Fecha_expiracion;
			}
			set
			{
				if ((this._Fecha_expiracion != value))
				{
					this.OnFecha_expiracionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_expiracion = value;
					this.SendPropertyChanged("Fecha_expiracion");
					this.OnFecha_expiracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Autenticacion", Storage="_Usuarios", ThisKey="ID_usuario", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Autenticacion.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Autenticacion.Add(this);
						this._ID_usuario = value.ID;
					}
					else
					{
						this._ID_usuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Listas")]
	public partial class Listas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Descripción;
		
		private int _ID_Usuario;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnID_UsuarioChanging(int value);
    partial void OnID_UsuarioChanged();
    #endregion
		
		public Listas()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", DbType="Int NOT NULL")]
		public int ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Listas_Tareas", Storage="_Tareas", ThisKey="ID", OtherKey="id_lista")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Listas", Storage="_Usuarios", ThisKey="ID_Usuario", OtherKey="ID", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Listas.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Listas.Add(this);
						this._ID_Usuario = value.ID;
					}
					else
					{
						this._ID_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Listas = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Listas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reconocimiento")]
	public partial class Reconocimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_reconocimiento;
		
		private int _ID_usuario;
		
		private System.Nullable<System.DateTime> _Fecha_logro;
		
		private string _Tipo;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_reconocimientoChanging(int value);
    partial void OnID_reconocimientoChanged();
    partial void OnID_usuarioChanging(int value);
    partial void OnID_usuarioChanged();
    partial void OnFecha_logroChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_logroChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Reconocimiento()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_reconocimiento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_reconocimiento
		{
			get
			{
				return this._ID_reconocimiento;
			}
			set
			{
				if ((this._ID_reconocimiento != value))
				{
					this.OnID_reconocimientoChanging(value);
					this.SendPropertyChanging();
					this._ID_reconocimiento = value;
					this.SendPropertyChanged("ID_reconocimiento");
					this.OnID_reconocimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_usuario", DbType="Int NOT NULL")]
		public int ID_usuario
		{
			get
			{
				return this._ID_usuario;
			}
			set
			{
				if ((this._ID_usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_usuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_usuario = value;
					this.SendPropertyChanged("ID_usuario");
					this.OnID_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_logro", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_logro
		{
			get
			{
				return this._Fecha_logro;
			}
			set
			{
				if ((this._Fecha_logro != value))
				{
					this.OnFecha_logroChanging(value);
					this.SendPropertyChanging();
					this._Fecha_logro = value;
					this.SendPropertyChanged("Fecha_logro");
					this.OnFecha_logroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Reconocimiento", Storage="_Usuarios", ThisKey="ID_usuario", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Reconocimiento.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Reconocimiento.Add(this);
						this._ID_usuario = value.ID;
					}
					else
					{
						this._ID_usuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recordatorio")]
	public partial class Recordatorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Recordatorio;
		
		private int _ID_Tarea;
		
		private System.DateTime _Fecha_aviso;
		
		private string _Estado;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RecordatorioChanging(int value);
    partial void OnID_RecordatorioChanged();
    partial void OnID_TareaChanging(int value);
    partial void OnID_TareaChanged();
    partial void OnFecha_avisoChanging(System.DateTime value);
    partial void OnFecha_avisoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Recordatorio()
		{
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Recordatorio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Recordatorio
		{
			get
			{
				return this._ID_Recordatorio;
			}
			set
			{
				if ((this._ID_Recordatorio != value))
				{
					this.OnID_RecordatorioChanging(value);
					this.SendPropertyChanging();
					this._ID_Recordatorio = value;
					this.SendPropertyChanged("ID_Recordatorio");
					this.OnID_RecordatorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tarea", DbType="Int NOT NULL")]
		public int ID_Tarea
		{
			get
			{
				return this._ID_Tarea;
			}
			set
			{
				if ((this._ID_Tarea != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TareaChanging(value);
					this.SendPropertyChanging();
					this._ID_Tarea = value;
					this.SendPropertyChanged("ID_Tarea");
					this.OnID_TareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_aviso", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_aviso
		{
			get
			{
				return this._Fecha_aviso;
			}
			set
			{
				if ((this._Fecha_aviso != value))
				{
					this.OnFecha_avisoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_aviso = value;
					this.SendPropertyChanged("Fecha_aviso");
					this.OnFecha_avisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Recordatorio", Storage="_Tareas", ThisKey="ID_Tarea", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Recordatorio.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Recordatorio.Add(this);
						this._ID_Tarea = value.ID;
					}
					else
					{
						this._ID_Tarea = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tareas")]
	public partial class Tareas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _titulo;
		
		private string _descripcion;
		
		private System.Nullable<System.DateTime> _fecha_creacion;
		
		private System.Nullable<System.DateTime> _fecha_limite;
		
		private string _estado;
		
		private string _prioridad;
		
		private int _id_usuario;
		
		private int _id_lista;
		
		private EntitySet<Recordatorio> _Recordatorio;
		
		private EntityRef<Listas> _Listas;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onfecha_creacionChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_creacionChanged();
    partial void Onfecha_limiteChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_limiteChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnprioridadChanging(string value);
    partial void OnprioridadChanged();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void Onid_listaChanging(int value);
    partial void Onid_listaChanged();
    #endregion
		
		public Tareas()
		{
			this._Recordatorio = new EntitySet<Recordatorio>(new Action<Recordatorio>(this.attach_Recordatorio), new Action<Recordatorio>(this.detach_Recordatorio));
			this._Listas = default(EntityRef<Listas>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(200)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_creacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_creacion
		{
			get
			{
				return this._fecha_creacion;
			}
			set
			{
				if ((this._fecha_creacion != value))
				{
					this.Onfecha_creacionChanging(value);
					this.SendPropertyChanging();
					this._fecha_creacion = value;
					this.SendPropertyChanged("fecha_creacion");
					this.Onfecha_creacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_limite", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_limite
		{
			get
			{
				return this._fecha_limite;
			}
			set
			{
				if ((this._fecha_limite != value))
				{
					this.Onfecha_limiteChanging(value);
					this.SendPropertyChanging();
					this._fecha_limite = value;
					this.SendPropertyChanged("fecha_limite");
					this.Onfecha_limiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prioridad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prioridad
		{
			get
			{
				return this._prioridad;
			}
			set
			{
				if ((this._prioridad != value))
				{
					this.OnprioridadChanging(value);
					this.SendPropertyChanging();
					this._prioridad = value;
					this.SendPropertyChanged("prioridad");
					this.OnprioridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL")]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lista", DbType="Int NOT NULL")]
		public int id_lista
		{
			get
			{
				return this._id_lista;
			}
			set
			{
				if ((this._id_lista != value))
				{
					if (this._Listas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_listaChanging(value);
					this.SendPropertyChanging();
					this._id_lista = value;
					this.SendPropertyChanged("id_lista");
					this.Onid_listaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Recordatorio", Storage="_Recordatorio", ThisKey="ID", OtherKey="ID_Tarea")]
		public EntitySet<Recordatorio> Recordatorio
		{
			get
			{
				return this._Recordatorio;
			}
			set
			{
				this._Recordatorio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Listas_Tareas", Storage="_Listas", ThisKey="id_lista", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Listas Listas
		{
			get
			{
				return this._Listas.Entity;
			}
			set
			{
				Listas previousValue = this._Listas.Entity;
				if (((previousValue != value) 
							|| (this._Listas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Listas.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Listas.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._id_lista = value.ID;
					}
					else
					{
						this._id_lista = default(int);
					}
					this.SendPropertyChanged("Listas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Tareas", Storage="_Usuarios", ThisKey="id_usuario", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._id_usuario = value.ID;
					}
					else
					{
						this._id_usuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recordatorio(Recordatorio entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Recordatorio(Recordatorio entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Correo_Electronico;
		
		private string _Contrasenia;
		
		private System.Nullable<System.DateTime> _Fecha_Registro;
		
		private System.Nullable<System.DateTime> _Fecha_Actualizacion;
		
		private EntitySet<Autenticacion> _Autenticacion;
		
		private EntitySet<Listas> _Listas;
		
		private EntitySet<Reconocimiento> _Reconocimiento;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntitySet<Calendario> _Calendario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCorreo_ElectronicoChanging(string value);
    partial void OnCorreo_ElectronicoChanged();
    partial void OnContraseniaChanging(string value);
    partial void OnContraseniaChanged();
    partial void OnFecha_RegistroChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_RegistroChanged();
    partial void OnFecha_ActualizacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_ActualizacionChanged();
    #endregion
		
		public Usuarios()
		{
			this._Autenticacion = new EntitySet<Autenticacion>(new Action<Autenticacion>(this.attach_Autenticacion), new Action<Autenticacion>(this.detach_Autenticacion));
			this._Listas = new EntitySet<Listas>(new Action<Listas>(this.attach_Listas), new Action<Listas>(this.detach_Listas));
			this._Reconocimiento = new EntitySet<Reconocimiento>(new Action<Reconocimiento>(this.attach_Reconocimiento), new Action<Reconocimiento>(this.detach_Reconocimiento));
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Calendario = new EntitySet<Calendario>(new Action<Calendario>(this.attach_Calendario), new Action<Calendario>(this.detach_Calendario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo_Electronico", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Correo_Electronico
		{
			get
			{
				return this._Correo_Electronico;
			}
			set
			{
				if ((this._Correo_Electronico != value))
				{
					this.OnCorreo_ElectronicoChanging(value);
					this.SendPropertyChanging();
					this._Correo_Electronico = value;
					this.SendPropertyChanged("Correo_Electronico");
					this.OnCorreo_ElectronicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasenia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contrasenia
		{
			get
			{
				return this._Contrasenia;
			}
			set
			{
				if ((this._Contrasenia != value))
				{
					this.OnContraseniaChanging(value);
					this.SendPropertyChanging();
					this._Contrasenia = value;
					this.SendPropertyChanged("Contrasenia");
					this.OnContraseniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Registro", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Registro
		{
			get
			{
				return this._Fecha_Registro;
			}
			set
			{
				if ((this._Fecha_Registro != value))
				{
					this.OnFecha_RegistroChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Registro = value;
					this.SendPropertyChanged("Fecha_Registro");
					this.OnFecha_RegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Actualizacion", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Actualizacion
		{
			get
			{
				return this._Fecha_Actualizacion;
			}
			set
			{
				if ((this._Fecha_Actualizacion != value))
				{
					this.OnFecha_ActualizacionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Actualizacion = value;
					this.SendPropertyChanged("Fecha_Actualizacion");
					this.OnFecha_ActualizacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Autenticacion", Storage="_Autenticacion", ThisKey="ID", OtherKey="ID_usuario")]
		public EntitySet<Autenticacion> Autenticacion
		{
			get
			{
				return this._Autenticacion;
			}
			set
			{
				this._Autenticacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Listas", Storage="_Listas", ThisKey="ID", OtherKey="ID_Usuario")]
		public EntitySet<Listas> Listas
		{
			get
			{
				return this._Listas;
			}
			set
			{
				this._Listas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Reconocimiento", Storage="_Reconocimiento", ThisKey="ID", OtherKey="ID_usuario")]
		public EntitySet<Reconocimiento> Reconocimiento
		{
			get
			{
				return this._Reconocimiento;
			}
			set
			{
				this._Reconocimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Tareas", Storage="_Tareas", ThisKey="ID", OtherKey="id_usuario")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Calendario", Storage="_Calendario", ThisKey="ID", OtherKey="ID_Usuario")]
		public EntitySet<Calendario> Calendario
		{
			get
			{
				return this._Calendario;
			}
			set
			{
				this._Calendario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Autenticacion(Autenticacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Autenticacion(Autenticacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Listas(Listas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Listas(Listas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Reconocimiento(Reconocimiento entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Reconocimiento(Reconocimiento entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Calendario(Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Calendario(Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendario")]
	public partial class Calendario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Calendario;
		
		private int _ID_Usuario;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CalendarioChanging(int value);
    partial void OnID_CalendarioChanged();
    partial void OnID_UsuarioChanging(int value);
    partial void OnID_UsuarioChanged();
    #endregion
		
		public Calendario()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Calendario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Calendario
		{
			get
			{
				return this._ID_Calendario;
			}
			set
			{
				if ((this._ID_Calendario != value))
				{
					this.OnID_CalendarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Calendario = value;
					this.SendPropertyChanged("ID_Calendario");
					this.OnID_CalendarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", DbType="Int NOT NULL")]
		public int ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Calendario", Storage="_Usuarios", ThisKey="ID_Usuario", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Calendario.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Calendario.Add(this);
						this._ID_Usuario = value.ID;
					}
					else
					{
						this._ID_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
